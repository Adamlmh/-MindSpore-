{"version":3,"file":"static/js/202.9c999f52.chunk.js","mappings":"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","sources":["utils/handleErrors.js","utils/axios.js","api/index.js","pages/person/bottom/message/messagecard.js","pages/person/bottom/message/message.js","pages/person/bottom/bottom.js","pages/person/datacenter/echarts.js","pages/person/datacenter/datacenter.js","pages/person/information/information.js","pages/person/person.js"],"sourcesContent":["// src/utils/errorHandling.js\r\nimport { message } from \"antd\";\r\n\r\nconst handleErrors = (error) => {\r\n  if (error.response) {\r\n    const { status } = error.response;\r\n    switch (true) {\r\n      case status >= 200 && status < 300:\r\n        break;\r\n      case status >= 500 && status < 600:\r\n        message.error(`服务器错误: ${status}`);\r\n\r\n        break;\r\n      case status === 403:\r\n        message.error(\"禁止访问: 403 Forbidden\");\r\n\r\n        break;\r\n      case status === 404:\r\n        message.error(\"未找到: 404 Not Found\");\r\n\r\n        break;\r\n      default:\r\n        message.error(`错误状态码: ${status}`);\r\n\r\n        break;\r\n    }\r\n  } else if (error.request) {\r\n    message.error(\"请求发出, 网络错误\");\r\n  } else {\r\n    message.error(\"请求错误: \" + error.message);\r\n  }\r\n};\r\n\r\nexport default handleErrors;\r\n","import axios from \"axios\";\r\nimport handleErrors from \"./handleErrors\";\r\n\r\n//创建一个axios实例\r\nconst service = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  responseType: \"json\",\r\n});\r\n\r\n//请求拦截器\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    //在请求前做些什么\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    //对请求错误做些什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n//响应拦截器\r\nservice.interceptors.response.use(\r\n  (response) => {\r\n    //对响应数据做些什么\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    //对响应错误做些什么\r\n    handleErrors(error); // 使用普通函数处理错误\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default service;\r\n","import service from \"../utils/axios\";\r\n//由于发请求拿数据是异步过程，所以在组件调用API接口时，需要使用async和await来处理\r\n//例子：\r\n// const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await loginApi({ username, password });\r\n//       console.log('Login successful:', response);\r\n//       // 处理登录成功逻辑\r\n//     } catch (error) {\r\n//       console.error('Login failed:', error);\r\n//       setError('Login failed. Please try again.'); // 显示错误信息给用户\r\n//     }\r\n//   };\r\n//登录API\r\nexport async function loginApi(data) {\r\n  return service({\r\n    url: \"/login\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\n//注册API\r\nexport function registerApi() {\r\n  const data = {\r\n    password: 123456,\r\n    email: \"123456@qq.com\",\r\n  };\r\n  return service({\r\n    url: \"/register\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\nexport function modelRankApi() {\r\n  return service({\r\n    url: \"/model/modelRank\",\r\n    method: \"get\",\r\n  });\r\n}\r\n\r\nexport function allModelsApi() {\r\n  return service({\r\n    url: \"/model/allModel\",\r\n    method: \"get\",\r\n  });\r\n}\r\n\r\nexport function sendVerificationCode(email) {\r\n  const data = {\r\n    email: email,\r\n  };\r\n  return service({\r\n    url: \"/account/register/sendVerificationCode\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\nexport function accountController(email, password, verificationCode) {\r\n  const data = {\r\n    email,\r\n    password,\r\n    verificationCode,\r\n  };\r\n  return service({\r\n    url: \"/account/register\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\nexport function accountLogin(email, password) {\r\n  const data = {\r\n    email,\r\n    password,\r\n  };\r\n  return service({\r\n    url: \"/account/login\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\n//工作台拿到模型列表API\r\nexport function getModelsApi() {\r\n  return service({\r\n    url: `/mission/queryUserCanUseModel?userId=${localStorage.getItem(\r\n      \"userId\"\r\n    )}`,\r\n    method: \"get\",\r\n  });\r\n}\r\n\r\n// 首页排行版\r\nexport function fetchRankApi() {\r\n  return service({\r\n    url: \"/model/modelRank\",\r\n    method: \"get\",\r\n  });\r\n}\r\n// 首页各申请数\r\nexport function fetchAllApplicationApi(userId) {\r\n  const data = {\r\n    userId,\r\n  };\r\n  return service({\r\n    url: \"/application/myApplicationCount\",\r\n    method: \"get\",\r\n    params: data,\r\n  });\r\n}\r\n// 首页最近工程\r\nexport function fetchRecentTaskApi(userId) {\r\n  const data = {\r\n    userId,\r\n  };\r\n  return service({\r\n    url: \"/mission/homePageRecentMission\",\r\n    method: \"get\",\r\n    params: data,\r\n  });\r\n}\r\n\r\n//获取资源中心\r\nexport function modelAllModelsApi(userId, page = 1, name = \"\") {\r\n  const params = {\r\n    userId,\r\n    page,\r\n    name,\r\n  };\r\n  return service({\r\n    url: \"/model/allModels\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n//顶部个人信息\r\nexport function accounthomePageInfo(userId) {\r\n  const params = {\r\n    userId: userId,\r\n  };\r\n  return service({\r\n    url: \"/account/homePageInfo\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 我的消息\r\nexport function fetchMyMessage(userId, page) {\r\n  const params = {\r\n    userId,\r\n    page,\r\n  };\r\n  return service({\r\n    url: \"/application/receivedApplication\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 我的模型\r\nexport function fetchMyModel(userId, page) {\r\n  const params = {\r\n    userId,\r\n    page,\r\n  };\r\n  return service({\r\n    url: \"/model/myModel\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 我的申请\r\n\r\nexport function fetchMyApply(userId, page) {\r\n  const params = {\r\n    userId,\r\n    page,\r\n  };\r\n  return service({\r\n    url: \"/application/myApplication\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n//个人中心的个人信息\r\nexport function accountpersonalCenterInfo(userId) {\r\n  const params = {\r\n    userId: userId,\r\n  };\r\n  return service({\r\n    url: \"/account/personalCenterInfo\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 同意\r\nexport function agreeApply(applicationId) {\r\n  const data = {\r\n    applicationId,\r\n  };\r\n  return service({\r\n    url: \"/application/passApplication\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n// 个人中心 拒绝\r\nexport function disagreeApply(applicationId) {\r\n  const data = {\r\n    applicationId,\r\n  };\r\n  return service({\r\n    url: \"/application/rejectApplication\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n//申请模块\r\nexport function applyModel(modelId, userId) {\r\n  const data = {\r\n    modelId: modelId,\r\n    userId: userId,\r\n  };\r\n  return service({\r\n    url: \"/application/applyModel\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n//工作台任务历史\r\nexport function fetchTaskHistory() {\r\n  return service({\r\n    url: `/mission/workspaceMission?userId=${localStorage.getItem(\"userId\")}`,\r\n    method: \"get\",\r\n  });\r\n}\r\n//提交新的任务\r\nexport function postNewTaskApi(data) {\r\n  return service({\r\n    url: `/mission/saveMission`,\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n//上传图片\r\nexport function uploadImgApi(formData) {\r\n  return service({\r\n    url: `/upload`,\r\n    method: \"post\",\r\n    data: formData,\r\n  });\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./message.css\"\r\nimport { Card,Button } from 'antd';\r\nimport { agreeApply, disagreeApply } from \"../../../../api\"\r\nconst MessageCard = ({ modelName, time, name, type,  num, status, applicationId }) => {\r\n    const [agree,setAgree]=useState(status)\r\n    const choice=(msg)=>{\r\n        if(msg==1){\r\n            setAgree(1)\r\n            const fetchData = async () => {\r\n                try {\r\n                    const response = await agreeApply(applicationId);\r\n                    console.log(response);\r\n                } catch (error) {\r\n                    console.error('Error fetching models:', error);\r\n                }\r\n            };\r\n            fetchData(); \r\n        }\r\n        if(msg==2){\r\n            setAgree(2)\r\n            const fetchData = async () => {\r\n                try {\r\n                    const response = await disagreeApply(applicationId);\r\n                    console.log(response);\r\n                } catch (error) {\r\n                    console.error('Error fetching models:', error);\r\n                }\r\n            };\r\n            fetchData(); \r\n        }\r\n    }\r\n    return(\r\n\r\n        <Card className=\"messagecard\" hoverable>\r\n        <div className=\"model_name_msg\">{modelName}</div>\r\n        <div className=\"model_time_msg msg_position\">{time}</div>\r\n            {type === '1' && <div className=\"model_apply_msg msg_position\">申请人: {name}</div>}\r\n            {type === '3' && <div className=\"model_apply_msg msg_position\">{name}的模型</div>}\r\n            {type === '1' &&agree==0 && <div><Button type=\"text\" className=\"msg_apply_disagree\" onClick={() => choice(2)}>拒绝</Button> <Button type=\"primary\" className=\"msg_apply_agree\" onClick={() => choice(1)}>通过</Button></div>}\r\n            {type === '3' && status== '1' && <div className=\"my_apply_condition isagree\">已通过</div>}\r\n            {type === '3' && status == '0' && <div className=\"my_apply_condition isagree\">待处理</div>}\r\n            {type === '3' && status == '2' && <div className=\"my_apply_condition isdisagree\">已拒绝</div>}\r\n            {type === '2' && <div className=\"model_use_time\">被调用次数：{num}</div>}\r\n            {type === '1' && agree == 1 && <div className=\"my_choice choise_agree\">已同意</div>}\r\n            {type === '1' && agree == 2 && <div className=\"my_choice choise_disagree\">已拒绝</div>}\r\n           \r\n    </Card>\r\n\r\n\r\n);}\r\nexport default MessageCard;","import \"./message.css\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchMyModel, fetchMyMessage, fetchMyApply } from \"../../../../api\"\r\nimport { Card, Pagination } from 'antd';\r\nimport MessageCard from \"./messagecard\";\r\n\r\nconst MessageList = ({ type }) => {\r\n        \r\n        const [myModel, setMyModel] = useState({ data: [] })\r\n        const [myMessage, setMyMessage] = useState({ data: [] })\r\n        const [myApply, setMyApply] = useState({ data: [] })\r\n        const [total,setTotal]=useState(0)\r\n        const [page, setPage] = useState(1)\r\n        const userId = localStorage.getItem(\"userId\")\r\n        const onChange = (pageNumber) => {\r\n                setPage(pageNumber)\r\n        };\r\n        useEffect(() => {\r\n                if(type==='2'){\r\n                        const fetchData = async () => {\r\n                                try {\r\n\r\n                                        const response = await fetchMyModel(userId, page);\r\n                                        setMyModel(response.data)\r\n                                        setTotal(response.data.total)\r\n                                        // console.log(response.data);\r\n                                } catch (error) {\r\n                                        console.error('Error fetching models:', error);\r\n                                }\r\n                        };\r\n                        fetchData(); \r\n                }\r\n                if(type==='1'){\r\n                        const fetchData = async () => {\r\n                                try {\r\n                                        const response = await fetchMyMessage(userId, page);\r\n                                        setMyMessage(response.data)\r\n                                        console.log(response.data);\r\n                                        setTotal(response.data.total)\r\n                                        // console.log(response.data);\r\n                                } catch (error) {\r\n                                        console.error('Error fetching models:', error);\r\n                                }\r\n                        };\r\n                        fetchData(); \r\n                } \r\n                if (type === '3') {\r\n                        const fetchData = async () => {\r\n                                try {\r\n                                        const response = await fetchMyApply(userId, page);\r\n                                        setMyApply(response.data)\r\n                                        console.log(response.data);\r\n                                        setTotal(response.data.total)\r\n                                        // console.log(response.data);\r\n                                } catch (error) {\r\n                                        console.error('Error fetching models:', error);\r\n                                }\r\n                        };\r\n                        fetchData();\r\n                }    \r\n        }, [page]);\r\n        return (\r\n\r\n        <div className=\"messagebox\">\r\n                <div className=\"messagelist\">\r\n                        {type==='2'&&myModel.data.map((item)=>{return(\r\n                                <MessageCard type={type}\r\n                                        num={item.usedTimes}\r\n                                        time={item.createTime}\r\n                                        modelName={item.modelName}\r\n                                        name={userId} />\r\n                        )})}\r\n                                {type === '1' && myMessage.data.map((item) => {\r\n                                        return (\r\n                                                <MessageCard type={type}\r\n                                                        time={item.applyTime}\r\n                                                        modelName={item.modelName}\r\n                                                        name={item.applicantName}\r\n                                                        status={item.status}\r\n                                                        applicationId={item.applicationId} />\r\n                                        )\r\n                                })}\r\n                                {type === '3' && myApply.data.map((item) => {\r\n                                        return (\r\n                                                <MessageCard type={type}\r\n                                                        time={item.applyTime}\r\n                                                        modelName={item.modelName}\r\n                                                        name={item.respondentName}\r\n                                                        status={item.status}\r\n                                                        applicationId={item.applicationId} />\r\n                                        )\r\n                                })}\r\n                        {/* <MessageCard type={type} agree={'1'} num={'10'} />\r\n                                <MessageCard type={type} agree={'1'} num={'90'} />\r\n                                <MessageCard type={type} agree={'1'} num={'70'} />\r\n                                <MessageCard type={type} agree={'0'} num={'30'} />\r\n                        <MessageCard type={type} agree={'0'} num={'110'} />\r\n                                <MessageCard type={type} agree={'0'} num={'110'} />\r\n                                <MessageCard type={type} agree={'0'} num={'110'} />\r\n                                <MessageCard type={type} agree={'0'} num={'110'} /> */}\r\n                </div>\r\n                <div className=\"msg_page\">\r\n                                <Pagination showQuickJumper defaultCurrent={2} total={total} pageSize={6} align=\"center\" onChange={onChange} />\r\n                </div>\r\n                \r\n        </div>\r\n\r\n\r\n);}\r\nexport default MessageList;","import \"./bottom.css\"\r\nimport MessageList from\"./message/message\"\r\nimport { Tabs } from 'antd';\r\nconst onChange = (key) => { \r\n    // console.log(key);\r\n};\r\nconst items = [\r\n    {\r\n        key: '1',\r\n        label: '我的消息',\r\n        children: <MessageList type={'1'}></MessageList>,\r\n    },\r\n    {\r\n        key: '2',\r\n        label: '我的作品',\r\n        children: <MessageList type={'2'}></MessageList>,\r\n    },\r\n    {\r\n        key: '3',\r\n        label: '我的申请',\r\n        children: <MessageList type={'3'}></MessageList>,\r\n    },\r\n];\r\nconst Mymessage = () => {\r\n    return(\r\n        <Tabs\r\n        className=\"mytab\"\r\n            onChange={onChange}\r\n            type=\"card\"\r\n            items={items}\r\n           \r\n        />\r\n    )\r\n};\r\nexport default Mymessage;","import React from 'react';\r\nimport * as echarts from 'echarts';\r\nimport EChart from 'echarts-for-react';\r\nimport 'echarts-gl'; // 导入 3D 插件\r\n\r\nconst MyECharts = () => {\r\n    const option = {\r\n        title: {\r\n            text: '近七天模型使用量',\r\n            left: 'center'\r\n        },\r\n        xAxis: {\r\n            type: 'category',\r\n            data: ['09-01', '09-02', '09-03', '09-04', '09-05', '09-06', '09-07']\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        series: [\r\n            {\r\n                data: [120, 200, 150, 80, 70, 110, 130],\r\n                type: 'bar',\r\n                showBackground: true,\r\n                backgroundStyle: {\r\n                    color: 'rgba(180, 180, 180, 0.2)'\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <EChart\r\n                option={option}\r\n                style={{ height: '350px', width: '100%', padding: '15px' }}\r\n                notMerge={true}\r\n            />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default MyECharts;","import MyECharts from \"./echarts\";\r\nimport \"./datacenter.css\"\r\nimport { Card } from 'antd';\r\nconst Datacenter=()=>{\r\n    return(\r\n       \r\n            <Card\r\n                className=\"datacenter\"\r\n                size=\"small\"\r\n                title=\"数据中心\"\r\n            hoverable\r\n            >\r\n            <MyECharts></MyECharts>\r\n                \r\n            </Card>\r\n        \r\n    )\r\n}\r\nexport default Datacenter;","import \"./information.css\"\r\nimport { List, Input, Button } from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport { useState, useEffect } from \"react\";\r\nimport { accountpersonalCenterInfo } from \"../../../api/index\"\r\n\r\nconst data = [\r\n    {\r\n        key: '用户名：',\r\n        text: 'Racing car sprays burning fuel into crowd.sdfadjsfakdsjfakdsjfkadf'\r\n    },\r\n    {\r\n        key: '邮箱：',\r\n        text: 'Racing car sprays burning fuel into crowd.'\r\n    },\r\n    {\r\n        key: '手机号：',\r\n        text: '18677900213'\r\n    },\r\n    {\r\n        key: '个性签名：',\r\n        text: 'Racing car sprays burning fuel into crowd.'\r\n    },\r\n];\r\n\r\nconst Information = () => {\r\n    const [status, setStatus] = useState('修改');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [userinformation, setUserinformation] = useState(data);\r\n    const [image, setimage] = useState('')\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await accountpersonalCenterInfo(localStorage.getItem('userId'));\r\n                const newUserInfo = [...userinformation]; // 创建一个副本\r\n                newUserInfo[0].text = 'Xiebro';\r\n                newUserInfo[1].text = response.data.email;\r\n                newUserInfo[3].text = response.data.description || '暂无个性签名';\r\n                setUserinformation(newUserInfo);\r\n                setimage(response.data.image)\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching models:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n    const btnClick = () => {\r\n        setDisabled(!disabled);\r\n        if (status === '修改') {\r\n            setStatus('完成');\r\n        } else {\r\n            setStatus('修改');\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (index, e) => {\r\n        const { value } = e.target;\r\n        const newUserInfo = [...userinformation];\r\n        newUserInfo[index].text = value;\r\n        setUserinformation(newUserInfo);\r\n    };\r\n\r\n    return (\r\n        <div className=\"information\">\r\n            {/* 头像 */}\r\n            <div className=\"personal_header\">\r\n                <div className=\"head_image\">\r\n                    <img src={image}></img>\r\n                </div>\r\n            </div>\r\n            {/* 信息展示 */}\r\n            <div className=\"all_message\">\r\n                <List\r\n                    className=\"mylist_message\"\r\n                    dataSource={userinformation}\r\n                    renderItem={(item, index) => (\r\n                        <List.Item style={{ border: 'none', whiteSpace: 'nowrap' }}>\r\n                            <p className=\"text_key\">{item.key}</p>\r\n                            <Input\r\n                                className=\"text_information\"\r\n                                disabled={disabled}\r\n                                value={item.text}\r\n                                onChange={(e) => handleInputChange(index, e)}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n            {/* 修改按钮 */}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Information;","import Mymessage from \"./bottom/bottom\"\r\nimport Datacenter from \"./datacenter/datacenter\"\r\nimport Information from \"./information/information\"\r\nimport \"./person.css\"\r\nconst Person = () => {\r\n    return (\r\n        <div className=\"person_message\">\r\n            {/* 个人信息上方模块---两张卡片 */}\r\n            <div className=\"person_top\">\r\n\r\n                {/* 左上角个人信息具体展示 */}\r\n                <div className=\"person_topleft\">\r\n<Information></Information>\r\n                </div>\r\n                {/* 右上角数据中心 */}\r\n                <div className=\"person_topright\">\r\n                    <Datacenter></Datacenter>\r\n                </div>\r\n            </div>\r\n            {/* 个人信息下方模块---消息 作品 申请展示 */}\r\n            <div className=\"person_bottom\">\r\n<Mymessage></Mymessage>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Person"],"names":["error","response","status","_message","concat","request","message","service","axios","create","baseURL","process","timeout","headers","responseType","interceptors","use","config","token","localStorage","getItem","Promise","reject","data","handleErrors","sendVerificationCode","email","url","method","accountController","password","verificationCode","accountLogin","getModelsApi","fetchRankApi","fetchAllApplicationApi","userId","params","fetchRecentTaskApi","modelAllModelsApi","page","arguments","length","undefined","name","accounthomePageInfo","fetchMyMessage","fetchMyModel","fetchMyApply","accountpersonalCenterInfo","agreeApply","applicationId","disagreeApply","applyModel","modelId","fetchTaskHistory","postNewTaskApi","_ref","modelName","time","type","num","agree","setAgree","useState","choice","msg","async","console","log","fetchData","_jsxs","_Card","className","hoverable","children","_jsx","_Button","onClick","myModel","setMyModel","myMessage","setMyMessage","myApply","setMyApply","total","setTotal","setPage","useEffect","map","item","MessageCard","usedTimes","createTime","applyTime","applicantName","respondentName","_Pagination","showQuickJumper","defaultCurrent","pageSize","align","onChange","pageNumber","key","items","label","MessageList","Mymessage","_Tabs","MyECharts","style","height","EChart","option","title","text","left","xAxis","yAxis","series","showBackground","backgroundStyle","color","width","padding","notMerge","Datacenter","size","Information","setStatus","disabled","setDisabled","userinformation","setUserinformation","image","setimage","newUserInfo","description","src","_List","dataSource","renderItem","index","Item","border","whiteSpace","_Input","value","e","handleInputChange","target","Person"],"sourceRoot":""}