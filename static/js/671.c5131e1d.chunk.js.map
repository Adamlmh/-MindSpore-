{"version":3,"file":"static/js/671.c5131e1d.chunk.js","mappings":"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","sources":["utils/handleErrors.js","utils/axios.js","api/index.js","pages/workbench/project/GetResult.js","pages/workbench/project/project.js","pages/workbench/workSpace/loading.js","pages/workbench/workSpace/upload.js","pages/workbench/workSpace/Setweight.js","pages/workbench/workSpace/index.js","pages/workbench/workbench.js"],"sourcesContent":["// src/utils/errorHandling.js\r\nimport { message } from \"antd\";\r\n\r\nconst handleErrors = (error) => {\r\n  if (error.response) {\r\n    const { status } = error.response;\r\n    switch (true) {\r\n      case status >= 200 && status < 300:\r\n        break;\r\n      case status >= 500 && status < 600:\r\n        message.error(`服务器错误: ${status}`);\r\n\r\n        break;\r\n      case status === 403:\r\n        message.error(\"禁止访问: 403 Forbidden\");\r\n\r\n        break;\r\n      case status === 404:\r\n        message.error(\"未找到: 404 Not Found\");\r\n\r\n        break;\r\n      default:\r\n        message.error(`错误状态码: ${status}`);\r\n\r\n        break;\r\n    }\r\n  } else if (error.request) {\r\n    message.error(\"请求发出, 网络错误\");\r\n  } else {\r\n    message.error(\"请求错误: \" + error.message);\r\n  }\r\n};\r\n\r\nexport default handleErrors;\r\n","import axios from \"axios\";\r\nimport handleErrors from \"./handleErrors\";\r\n\r\n//创建一个axios实例\r\nconst service = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  timeout: 5000,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  responseType: \"json\",\r\n});\r\n\r\n//请求拦截器\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    //在请求前做些什么\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    //对请求错误做些什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n//响应拦截器\r\nservice.interceptors.response.use(\r\n  (response) => {\r\n    //对响应数据做些什么\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    //对响应错误做些什么\r\n    handleErrors(error); // 使用普通函数处理错误\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default service;\r\n","import service from \"../utils/axios\";\r\n//由于发请求拿数据是异步过程，所以在组件调用API接口时，需要使用async和await来处理\r\n//例子：\r\n// const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await loginApi({ username, password });\r\n//       console.log('Login successful:', response);\r\n//       // 处理登录成功逻辑\r\n//     } catch (error) {\r\n//       console.error('Login failed:', error);\r\n//       setError('Login failed. Please try again.'); // 显示错误信息给用户\r\n//     }\r\n//   };\r\n//登录API\r\nexport async function loginApi(data) {\r\n  return service({\r\n    url: \"/login\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\n//注册API\r\nexport function registerApi() {\r\n  const data = {\r\n    password: 123456,\r\n    email: \"123456@qq.com\",\r\n  };\r\n  return service({\r\n    url: \"/register\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\nexport function modelRankApi() {\r\n  return service({\r\n    url: \"/model/modelRank\",\r\n    method: \"get\",\r\n  });\r\n}\r\n\r\nexport function allModelsApi() {\r\n  return service({\r\n    url: \"/model/allModel\",\r\n    method: \"get\",\r\n  });\r\n}\r\n\r\nexport function sendVerificationCode(email) {\r\n  const data = {\r\n    email: email,\r\n  };\r\n  return service({\r\n    url: \"/account/register/sendVerificationCode\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\nexport function accountController(email, password, verificationCode) {\r\n  const data = {\r\n    email,\r\n    password,\r\n    verificationCode,\r\n  };\r\n  return service({\r\n    url: \"/account/register\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\nexport function accountLogin(email, password) {\r\n  const data = {\r\n    email,\r\n    password,\r\n  };\r\n  return service({\r\n    url: \"/account/login\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n\r\n//工作台拿到模型列表API\r\nexport function getModelsApi() {\r\n  return service({\r\n    url: `/mission/queryUserCanUseModel?userId=${localStorage.getItem(\r\n      \"userId\"\r\n    )}`,\r\n    method: \"get\",\r\n  });\r\n}\r\n\r\n// 首页排行版\r\nexport function fetchRankApi() {\r\n  return service({\r\n    url: \"/model/modelRank\",\r\n    method: \"get\",\r\n  });\r\n}\r\n// 首页各申请数\r\nexport function fetchAllApplicationApi(userId) {\r\n  const data = {\r\n    userId,\r\n  };\r\n  return service({\r\n    url: \"/application/myApplicationCount\",\r\n    method: \"get\",\r\n    params: data,\r\n  });\r\n}\r\n// 首页最近工程\r\nexport function fetchRecentTaskApi(userId) {\r\n  const data = {\r\n    userId,\r\n  };\r\n  return service({\r\n    url: \"/mission/homePageRecentMission\",\r\n    method: \"get\",\r\n    params: data,\r\n  });\r\n}\r\n\r\n//获取资源中心\r\nexport function modelAllModelsApi(userId, page = 1, name = \"\") {\r\n  const params = {\r\n    userId,\r\n    page,\r\n    name,\r\n  };\r\n  return service({\r\n    url: \"/model/allModels\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n//顶部个人信息\r\nexport function accounthomePageInfo(userId) {\r\n  const params = {\r\n    userId: userId,\r\n  };\r\n  return service({\r\n    url: \"/account/homePageInfo\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 我的消息\r\nexport function fetchMyMessage(userId, page) {\r\n  const params = {\r\n    userId,\r\n    page,\r\n  };\r\n  return service({\r\n    url: \"/application/receivedApplication\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 我的模型\r\nexport function fetchMyModel(userId, page) {\r\n  const params = {\r\n    userId,\r\n    page,\r\n  };\r\n  return service({\r\n    url: \"/model/myModel\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 我的申请\r\n\r\nexport function fetchMyApply(userId, page) {\r\n  const params = {\r\n    userId,\r\n    page,\r\n  };\r\n  return service({\r\n    url: \"/application/myApplication\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n//个人中心的个人信息\r\nexport function accountpersonalCenterInfo(userId) {\r\n  const params = {\r\n    userId: userId,\r\n  };\r\n  return service({\r\n    url: \"/account/personalCenterInfo\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n// 个人中心 同意\r\nexport function agreeApply(applicationId) {\r\n  const data = {\r\n    applicationId,\r\n  };\r\n  return service({\r\n    url: \"/application/passApplication\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n// 个人中心 拒绝\r\nexport function disagreeApply(applicationId) {\r\n  const data = {\r\n    applicationId,\r\n  };\r\n  return service({\r\n    url: \"/application/rejectApplication\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n//申请模块\r\nexport function applyModel(modelId, userId) {\r\n  const data = {\r\n    modelId: modelId,\r\n    userId: userId,\r\n  };\r\n  return service({\r\n    url: \"/application/applyModel\",\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n//工作台任务历史\r\nexport function fetchTaskHistory() {\r\n  return service({\r\n    url: `/mission/workspaceMission?userId=${localStorage.getItem(\"userId\")}`,\r\n    method: \"get\",\r\n  });\r\n}\r\n//提交新的任务\r\nexport function postNewTaskApi(data) {\r\n  return service({\r\n    url: `/mission/saveMission`,\r\n    method: \"post\",\r\n    data,\r\n  });\r\n}\r\n//上传图片\r\nexport function uploadImgApi(formData) {\r\n  return service({\r\n    url: `/upload`,\r\n    method: \"post\",\r\n    data: formData,\r\n  });\r\n}\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Drawer } from \"antd\";\r\n// const GetResult = ({ missionId, items }) => {\r\n//   items[missionId] = {};\r\n//   useEffect(() => {}, [missionId]);\r\n//   const [open, setOpen] = useState(false);\r\n//   const showDrawer = () => {\r\n//     setOpen(true);\r\n//   };\r\n//   const onClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <Button type=\"primary\" onClick={showDrawer}>\r\n//         查看结果\r\n//       </Button>\r\n//       <Drawer title=\"查看结果\" onClose={onClose} open={open}>\r\n// {  if(items[missionId]){\r\n//               <p>输入：</p>\r\n//         <p>\r\n//           {items[missionId].content\r\n//             ? items[missionId].content\r\n//             : items[missionId].image}\r\n//         </p>\r\n//         <br></br>\r\n//         <p>输出：</p>\r\n//         <p>{items[missionId].answer}</p>\r\n//   }}\r\n//       </Drawer>\r\n//     </>\r\n//   );\r\n// };\r\n// export default GetResult;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Drawer } from \"antd\";\r\n\r\n// const GetResult = ({ missionId, items }) => {\r\n//   // 初始化 items[missionId] 为一个空对象\r\n//   items[missionId] = items[missionId] || {};\r\n\r\n//   const [open, setOpen] = useState(false);\r\n\r\n//   const showDrawer = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const onClose = () => {\r\n//     setOpen(false);\r\n//   };\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Drawer } from \"antd\";\r\n\r\nconst GetResult = ({ missionId, items }) => {\r\n  // 初始化 items[missionId] 为一个空对象\r\n  items[missionId] = items[missionId] || {};\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // 检查是否是图片 URL 的函数\r\n  const isImageUrl = (url) => {\r\n    return (\r\n      typeof url === \"string\" && url.match(/\\.(jpeg|jpg|gif|png)$/) != null // 检查是否是图片格式的 URL\r\n    );\r\n  };\r\n\r\n  // Render the content based on items[missionId]\r\n  const renderContent = () => {\r\n    if (items[missionId]) {\r\n      return (\r\n        <>\r\n          <p>输入：</p>\r\n\r\n          <p>\r\n            {items[missionId].content ? (\r\n              items[missionId].content\r\n            ) : items[missionId].image ? (\r\n              <img\r\n                src={items[missionId].image}\r\n                style={{ width: \"80%\", height: \"auto\" }}\r\n              />\r\n            ) : null}\r\n          </p>\r\n          <br />\r\n          <p>输出：</p>\r\n          <p>\r\n            {isImageUrl(items[missionId].answer) ? (\r\n              <img\r\n                src={items[missionId].answer}\r\n                alt=\"answer\"\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n              />\r\n            ) : (\r\n              items[missionId].answer\r\n            )}\r\n          </p>\r\n        </>\r\n      );\r\n    }\r\n    return <p>数据未加载</p>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={showDrawer}>\r\n        查看结果\r\n      </Button>\r\n      <Drawer title=\"查看结果\" onClose={onClose} open={open} size=\"large\">\r\n        {renderContent()}\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetResult;\r\n","import \"./project.css\";\r\nimport { Button, Card, Modal, Input } from \"antd\";\r\nimport { PlusOutlined, DatabaseOutlined } from \"@ant-design/icons\";\r\nimport GetResult from \"./GetResult\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchTaskHistory } from \"../../../api\";\r\nconst Project = ({\r\n  flash,\r\n  missionId,\r\n  setMissionId,\r\n  items,\r\n  setItems,\r\n  setMissionListData,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  // const [items, setItems] = useState([]);\r\n  const [newitems, setNewItems] = useState([]);\r\n  //追踪选中卡片的索引\r\n  const [selectedCardIndex, setSelectedCardIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTaskHistoryAPI = async () => {\r\n      try {\r\n        const response = await fetchTaskHistory();\r\n        setItems(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching task history:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTaskHistoryAPI();\r\n  }, [flash]);\r\n  useEffect(() => {\r\n    const newitems = items.map(({ missionName }, index) => ({\r\n      missionName,\r\n      index,\r\n    }));\r\n    setNewItems(newitems);\r\n  }, [items]);\r\n  const onChange = (e) => setInputValue(e.target.value);\r\n  const showModal = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n\r\n    setTimeout(() => {\r\n      setOpen(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClick = (key, index) => {\r\n    setMissionId(key);\r\n    setSelectedCardIndex(index);\r\n    setMissionListData(items[index]);\r\n  };\r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"TwoButton\" style={{ display: \"flex\", gap: \"5px\" }}>\r\n        <Button\r\n          className=\"add\"\r\n          icon={<PlusOutlined />}\r\n          type=\"text\"\r\n          style={{ flexGrow: 1 }}\r\n          onClick={showModal}\r\n        >\r\n          新建项目\r\n        </Button>\r\n        <Modal\r\n          title=\"项目名\"\r\n          open={open}\r\n          onOk={handleOk}\r\n          confirmLoading={confirmLoading}\r\n          onCancel={handleCancel}\r\n          okText={\"提交\"}\r\n          cancelText={\"取消\"}\r\n        >\r\n          <Input\r\n            placeholder=\"请输入项目名\"\r\n            value={inputValue}\r\n            onChange={onChange}\r\n          ></Input>\r\n        </Modal>\r\n        <GetResult missionId={missionId} items={items} />\r\n      </div>\r\n\r\n      {newitems.map(({ missionName }, index) => (\r\n        <Card\r\n          style={{\r\n            width: 210,\r\n            marginTop: 16,\r\n            backgroundColor: selectedCardIndex === index ? \"#f0f0f0\" : \"#fff\", // 根据选中状态设置背景色\r\n            border:\r\n              selectedCardIndex === index\r\n                ? \"2px solid #1890ff\"\r\n                : \"1px solid #d9d9d9\", // 改变边框高亮\r\n          }}\r\n        >\r\n          <h4\r\n            key={index}\r\n            onClick={() => {\r\n              handleClick(index, index);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            {missionName}\r\n          </h4>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import \"./loading.css\";\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"fullscreen-overlay\">\r\n      <div id=\"wifi-loader\">\r\n        <svg class=\"circle-outer\" viewBox=\"0 0 86 86\">\r\n          <circle class=\"back\" cx=\"43\" cy=\"43\" r=\"40\"></circle>\r\n          <circle class=\"front\" cx=\"43\" cy=\"43\" r=\"40\"></circle>\r\n          <circle class=\"new\" cx=\"43\" cy=\"43\" r=\"40\"></circle>\r\n        </svg>\r\n        <svg class=\"circle-middle\" viewBox=\"0 0 60 60\">\r\n          <circle class=\"back\" cx=\"30\" cy=\"30\" r=\"27\"></circle>\r\n          <circle class=\"front\" cx=\"30\" cy=\"30\" r=\"27\"></circle>\r\n        </svg>\r\n        <svg class=\"circle-inner\" viewBox=\"0 0 34 34\">\r\n          <circle class=\"back\" cx=\"17\" cy=\"17\" r=\"14\"></circle>\r\n          <circle class=\"front\" cx=\"17\" cy=\"17\" r=\"14\"></circle>\r\n        </svg>\r\n        <div class=\"text\" data-text=\"Searching\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Loading;\r\n","import React, { useState } from \"react\";\r\nimport { PlusOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Upload,\r\n  Drawer,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Space,\r\n  message,\r\n  Radio,\r\n} from \"antd\";\r\nimport axios from \"axios\";\r\nimport Loading from \"./loading\";\r\nimport { postNewTaskApi, uploadImgApi } from \"../../../api\";\r\nconst UploadMessage = ({ dataresult, setFlash, flash, rawList }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [showLoading, setShowLoading] = useState(false);\r\n  //服务器选择按钮的状态\r\n  const [ServerChoose, setServerChoose] = useState(\"auto\");\r\n  const showDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    form.resetFields();\r\n    setFileList([]);\r\n  };\r\n\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e?.fileList;\r\n  };\r\n  const handleRemove = () => {\r\n    setFileList([]);\r\n  };\r\n  const handleChange = ({ fileList: newFileList }) => {\r\n    // 限制只允许一个文件\r\n    if (newFileList.length > 1) {\r\n      message.warning(\"只能上传一张图片\");\r\n      return;\r\n    }\r\n\r\n    // 检查文件类型\r\n    const isImage = newFileList[0]?.type.startsWith(\"image/\");\r\n    if (!isImage) {\r\n      message.warning(\"只能上传图片文件\");\r\n      return;\r\n    }\r\n\r\n    setFileList(newFileList);\r\n  };\r\n  const onFinish = async (values) => {\r\n    const { description } = values;\r\n    // 检查是否文本和图片都存在或都不存在\r\n    if (!description && fileList.length === 0) {\r\n      message.warning(\"请输入文本或上传图片，二者必选其一\");\r\n      return;\r\n    }\r\n    if (description && fileList.length > 0) {\r\n      message.warning(\"只能选择文本或图片，不能同时选择\");\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    // formData.append(\"description\", description);\r\n    // formData.append(\"dataresult\", hiddenData); // 添加 dataresult\r\n\r\n    fileList.forEach((file) => {\r\n      formData.append(\"multipartFile\", file.originFileObj);\r\n    });\r\n\r\n    try {\r\n      let response = null;\r\n\r\n      // 如果有图片上传，先上传给后台\r\n      if (fileList.length > 0) {\r\n        // response = uploadImgApi(formData);\r\n        response = await axios.post(\r\n          \"http://10.21.56.119:8082/upload\",\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // 添加 token 到请求头\r\n            },\r\n          }\r\n        );\r\n      }\r\n\r\n      let data = {\r\n        image: response ? response.data.data : \"\",\r\n        content: description ? description : \"\",\r\n        modelList: dataresult,\r\n        answer: \"\",\r\n        errorText: \"\",\r\n      };\r\n\r\n      setShowLoading(true);\r\n      //发请求给AI服务器跑模型\r\n      //先判断cup情况选择服务器\r\n      // 获取两个服务器的cpu使用率\r\n      let cup_use1 = null;\r\n      let cup_use2 = null;\r\n      let urlServer = null;\r\n      if (ServerChoose === \"auto\") {\r\n        cup_use1 = await axios.get(\"http://10.21.56.118:11451/get_cpu_usage\");\r\n        cup_use2 = await axios.get(\"http://10.21.56.119:11451/get_cpu_usage\");\r\n        // 比较两个服务器的cpu使用率，如果第一个服务器的cpu使用率小于等于第二个服务器的cpu使用率，则使用第一个服务器，否则使用第二个服务器\r\n\r\n        if (cup_use1.data <= cup_use2.data) {\r\n          urlServer = \"http://10.21.56.118:11451/post_json\";\r\n        } else {\r\n          urlServer = \"http://10.21.56.119:11451/post_json\";\r\n        }\r\n      } else if (ServerChoose === \"Server1\") {\r\n        urlServer = \"http://10.21.56.118:11451/post_json\";\r\n      } else if (ServerChoose === \"Server2\") {\r\n        urlServer = \"http://10.21.56.119:11451/post_json\";\r\n      }\r\n\r\n      response = await axios.post(urlServer, data, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (response.data.errorText) {\r\n        message.error(response.data.errorText);\r\n        setShowLoading(false);\r\n        return;\r\n      }\r\n\r\n      response = response.data;\r\n\r\n      data = {\r\n        ...data,\r\n        answer: response.answer,\r\n        missionName: values.missionName,\r\n        userId: localStorage.getItem(\"userId\"),\r\n        modelList: JSON.stringify(rawList),\r\n        formattedModelList: dataresult,\r\n      };\r\n      // 发给后台服务器存储当前结果\r\n      await postNewTaskApi(data);\r\n      onClose();\r\n      setShowLoading(false);\r\n      message.success(\"成功啦,请点击查看结果~\");\r\n      setFlash(!flash);\r\n    } catch (error) {\r\n      setShowLoading(false);\r\n      message.error(\"Upload failed\");\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  if (showLoading) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <div key={1}>\r\n      <Button type=\"primary\" onClick={showDrawer} icon={<PlusOutlined />}>\r\n        上传\r\n      </Button>\r\n      <Drawer\r\n        title=\"运行项目\"\r\n        width={720}\r\n        onClose={onClose}\r\n        open={open}\r\n        bodyStyle={{\r\n          paddingBottom: 80,\r\n        }}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={onClose}>取消</Button>\r\n            <Button onClick={() => form.submit()} type=\"primary\">\r\n              运行\r\n            </Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <Radio.Group\r\n          value={ServerChoose}\r\n          onChange={(e) => setServerChoose(e.target.value)}\r\n          style={{ marginBottom: \"20px\" }}\r\n        >\r\n          <Radio.Button value=\"auto\">智能选择</Radio.Button>\r\n          <Radio.Button value=\"Server1\">服务器1</Radio.Button>\r\n          <Radio.Button value=\"Server2\">服务器2</Radio.Button>\r\n        </Radio.Group>\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          hideRequiredMark\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"项目名称\"\r\n            name=\"missionName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入项目名字\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"请输入文本\"\r\n                rules={[\r\n                  {\r\n                    message: \"请输入文本\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input.TextArea rows={4} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item name=\"hiddenData\" initialValue={dataresult} hidden>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"上传图片\"\r\n            valuePropName=\"fileList\"\r\n            getValueFromEvent={normFile}\r\n          >\r\n            <Upload\r\n              listType=\"picture-card\"\r\n              fileList={fileList}\r\n              beforeUpload={() => false}\r\n              onChange={handleChange}\r\n              maxCount={1} // 允许最多上传一张文件\r\n              accept=\"image/*\" // 只接受图片文件\r\n            >\r\n              <button\r\n                style={{\r\n                  border: 0,\r\n                  background: \"none\",\r\n                }}\r\n                type=\"button\"\r\n              >\r\n                <PlusOutlined />\r\n                <div\r\n                  style={{\r\n                    marginTop: 8,\r\n                  }}\r\n                >\r\n                  Upload\r\n                </div>\r\n              </button>\r\n            </Upload>\r\n            {fileList.length > 0 && (\r\n              <Button\r\n                icon={<DeleteOutlined />}\r\n                onClick={handleRemove}\r\n                style={{ marginLeft: 16 }}\r\n              >\r\n                取消上传\r\n              </Button>\r\n            )}\r\n          </Form.Item>\r\n        </Form>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadMessage;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Input } from \"antd\";\r\nimport { PieChartOutlined, BulbOutlined } from \"@ant-design/icons\";\r\nconst Setweight = ({\r\n  Name,\r\n  modelId,\r\n  setLists,\r\n  weight,\r\n  lists,\r\n  index,\r\n  question,\r\n}) => {\r\n  // const needChangeList = lists[index].items;\r\n  const [open, setOpen] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [oldweight, setOldweight] = useState(weight);\r\n  const [oldquestion, setOldquestion] = useState(question);\r\n  const showModal = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    // 更新 weight\r\n    const updatedList = updateWeightByModelId(\r\n      lists[index].items,\r\n      modelId,\r\n      oldweight,\r\n      oldquestion\r\n    );\r\n\r\n    // 更新 lists 状态\r\n    setLists(\r\n      lists.map((list, i) =>\r\n        i === index ? { ...list, items: updatedList } : list\r\n      )\r\n    );\r\n\r\n    // 关闭 Modal\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setOpen(false);\r\n      setConfirmLoading(false);\r\n    }, 1000);\r\n  };\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setOpen(false);\r\n  };\r\n  const changeWeight = (event) => {\r\n    const value = event.target.value;\r\n    // 允许输入数字和小数点，并且限制小数点出现的次数不超过1次\r\n    const isNumber =\r\n      !isNaN(value) &&\r\n      value.indexOf(\".\") === value.lastIndexOf(\".\") &&\r\n      value.split(\".\").length - 1 <= 1;\r\n    setOldweight(isNumber ? value : \"\");\r\n  };\r\n  const changeQuestion = (event) => {\r\n    const value = event.target.value;\r\n    setOldquestion(value);\r\n  };\r\n\r\n  const updateWeightByModelId = (list, modelId, newWeight, newQuestion) => {\r\n    return list.map((item) =>\r\n      item.modelId === modelId\r\n        ? { ...item, weight: newWeight, question: newQuestion }\r\n        : item\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={showModal}\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <span\r\n          style={{\r\n            display: \"block\", // 让 span 元素撑满按钮容器\r\n            maxWidth: \"100%\", // 确保文本宽度不超过按钮\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n          }}\r\n        >\r\n          {Name}\r\n        </span>\r\n      </Button>\r\n      <Modal\r\n        title=\"自定义信息\"\r\n        open={open}\r\n        onOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        onCancel={handleCancel}\r\n        okText=\"确定\" // 自定义确定按钮的文本\r\n        cancelText=\"取消\" // 自定义取消按钮的文本\r\n      >\r\n        <Input\r\n          placeholder=\"请输入权重\"\r\n          prefix={<PieChartOutlined />}\r\n          value={oldweight}\r\n          onChange={changeWeight}\r\n          pattern=\"\\d+(\\.\\d{0,})?\" // 正则表达式，允许输入数字和小数点，小数点后最多两位数字\r\n          title=\"请输入权重（数字或小数）\" // 提示信息\r\n          required // 必填项\r\n        />\r\n        {question && (\r\n          <Input\r\n            placeholder=\"请输入提示词\"\r\n            prefix={<BulbOutlined />}\r\n            style={{ marginTop: \"10px\" }}\r\n            value={oldquestion}\r\n            onChange={changeQuestion}\r\n            title=\"请输入提示词\"\r\n          />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default Setweight;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { Card, Button, message, Flex } from \"antd\";\r\nimport UploadMessage from \"./upload\";\r\nimport Setweight from \"./Setweight\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { getModelsApi } from \"../../../api\";\r\n\r\nimport \"./styles.css\";\r\n\r\n// const ModalListResponse = [\r\n//   {\r\n//     id: 1,\r\n//     modelName: \"模型1\",\r\n//     modelId: \"1\",\r\n//     weight: \"\",\r\n//     modelUrl: \"item.modelUrl\",\r\n//     isAPI: \"1\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     modelName: \"模型2\",\r\n//     modelId: \"2\",\r\n//     weight: \"\",\r\n//     modelUrl: \"item.modelUrl\",\r\n//     isAPI: \"0\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     modelName: \"模型3\",\r\n//     modelId: \"3\",\r\n//     weight: \"\",\r\n//     modelUrl: \"item.modelUrl\",\r\n//     isAPI: \"1\",\r\n//   },\r\n// ];\r\n\r\nconst ItemCard = ({ item, lists, setLists, index }) => (\r\n  <p title={item.description}>\r\n    <Card key={item.id} hoverable size=\"small\" style={{ marginBottom: \"12px\" }}>\r\n      <Setweight\r\n        Name={item.modelName}\r\n        weight={item.weight}\r\n        modelId={item.modelId}\r\n        lists={lists}\r\n        setLists={setLists}\r\n        index={index}\r\n        question={item.question}\r\n      />\r\n    </Card>\r\n  </p>\r\n);\r\n\r\nconst DynamicDragList = ({ setFlash, flash, MissionListData }) => {\r\n  //发请求拿模型数据\r\n\r\n  const [modalList, setModalList] = useState([]);\r\n  useEffect(() => {\r\n    const fetchModalListResponse = async () => {\r\n      const ModalListResponse = await getModelsApi();\r\n      const ModalList = ModalListResponse.data;\r\n      console.log(ModalList);\r\n\r\n      //新加一个字段question\r\n      const updatedModalListResponse = ModalList.map((item) => ({\r\n        ...item,\r\n        ...(item.isAPI === 1 ? { question: \"123\" } : {}),\r\n      }));\r\n\r\n      // setModalList(ModalListResponse);\r\n      setModalList(updatedModalListResponse);\r\n    };\r\n    fetchModalListResponse();\r\n  }, []);\r\n  const [lists, setLists] = useState([]);\r\n  // 当 modalList 更新时更新 lists\r\n  //将所有的模型数据放到第一个列表中\r\n  const LList = MissionListData.modelList\r\n    ? JSON.parse(MissionListData.modelList)\r\n    : []; // 如果 modelList 不存在，则设为空数组\r\n  useEffect(() => {\r\n    setLists([{ id: 1, items: modalList }]);\r\n  }, [modalList]);\r\n  useEffect(() => {\r\n    if (LList) {\r\n      //闭包问题\r\n      setLists([{ id: 1, items: modalList }]); // 设置初始列表\r\n      setLists((prevLists) => [...prevLists, ...LList]); // 基于前一个状态更新\r\n    }\r\n  }, [MissionListData]);\r\n  const handleDrop = (event) => {\r\n    console.log(\"Drag ended:\", event);\r\n  };\r\n\r\n  const [modelList, setModelList] = useState([]);\r\n  useEffect(() => {\r\n    const newModelList = lists\r\n      .filter((_, index) => index > 0) // 跳过第一个列表（所有数据模型），即从真正的第一层开始\r\n      .filter((list) => list.items.length > 0) // 过滤空列表\r\n      .map((list, index) => ({\r\n        layer: index + 1,\r\n        parallel: list.items.length > 1 ? 1 : 0,\r\n        models: list.items.map((item) => ({\r\n          modelName: item.modelName,\r\n          modelUrl: item.modelUrl,\r\n          isAPI: item.isAPI,\r\n          weight: item.weight,\r\n          question: item.question,\r\n        })),\r\n      }));\r\n    setModelList(newModelList);\r\n  }, [lists]);\r\n\r\n  const addNewList = () => {\r\n    // 检查所有列表是否为空\r\n    const isAnyListEmpty = lists.some((list) => list.items.length === 0);\r\n\r\n    if (isAnyListEmpty) {\r\n      message.error(\"当前列表中存在空列表，无法添加新的列表\");\r\n      return;\r\n    }\r\n\r\n    const newId = lists.length + 1;\r\n    setLists([...lists, { id: newId, items: [] }]);\r\n  };\r\n\r\n  // 将第一个列表单独提取\r\n  const [firstList, ...remainingLists] = lists;\r\n  //将第一个列表根据isAPi排序  isAPI越大的放越后面\r\n  //使用可选链操作符（?.）\r\n  // 可选链操作符是一个较新的 JavaScript 特性，它允许在访问对象的属性时，如果对象为 null 或 undefined，返回 undefined 而不是抛出错误。\r\n  firstList?.items.sort((a, b) => a.isAPI - b.isAPI);\r\n  const firstIsAPI1Index = firstList?.items?.findIndex(\r\n    (item) => item?.isAPI === 1\r\n  );\r\n  console.log(firstIsAPI1Index);\r\n\r\n  const handleListChange = (newList, index) => {\r\n    const updatedLists = [...lists];\r\n    console.log(newList);\r\n\r\n    updatedLists[index].items = newList;\r\n\r\n    setLists(updatedLists);\r\n  };\r\n\r\n  //结果\r\n  const dataresult = modelList;\r\n  // const dataresult = JSON.stringify(modelList, null, 0);\r\n\r\n  console.log(dataresult);\r\n  // console.log(modelList);\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", marginTop: \"5px\", flexGrow: 1, gap: \"10px\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          flex: \"0 0 220px\",\r\n          padding: \"0 10px\",\r\n          minWidth: \"15vw\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <ReactSortable\r\n          list={[]}\r\n          setList={() => {}} // 空函数，因为我们不需要更新垃圾桶区域的状态\r\n          group={{ name: \"shared\", pull: false, put: true }}\r\n        >\r\n          <DeleteOutlined\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"20px\",\r\n              right: \"30px\",\r\n              zIndex: \"10\",\r\n              fontSize: \"18px\",\r\n            }}\r\n          />\r\n        </ReactSortable>\r\n\r\n        {/* 渲染第一个列表 */}\r\n        {/* 渲染第一个列表 */}\r\n        {firstList && (\r\n          <Card\r\n            title={`模型库`}\r\n            bordered={false}\r\n            style={{\r\n              height: \"100vh\",\r\n              overflowY: \"auto\",\r\n              minWidth: \"220px\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              <Button\r\n                onClick={addNewList}\r\n                type=\"primary\"\r\n                style={{ marginBottom: 20, marginRight: \"10px\", flex: \"1\" }}\r\n              >\r\n                增加层级\r\n              </Button>\r\n              <UploadMessage\r\n                style={{ flex: \"1\" }}\r\n                dataresult={dataresult}\r\n                setFlash={setFlash}\r\n                flash={flash}\r\n                rawList={remainingLists}\r\n              />\r\n            </div>\r\n\r\n            <ReactSortable\r\n              list={firstList.items}\r\n              setList={(newList) => handleListChange(newList, 0)}\r\n              onEnd={handleDrop}\r\n              group={{\r\n                name: \"shared\",\r\n                pull: \"clone\",\r\n                put: false,\r\n              }}\r\n              clone={(item) => ({\r\n                ...item,\r\n                id: item.id ? item.id : new Date().getTime(),\r\n              })}\r\n              className={`list${firstList.id}`}\r\n              style={{ height: \"100%\" }}\r\n            >\r\n              {firstList.items.map((item, index) => {\r\n                const showSeparator = index === firstIsAPI1Index;\r\n\r\n                return (\r\n                  <React.Fragment key={item.id}>\r\n                    {showSeparator && (\r\n                      <div className=\"with-separator\">\r\n                        <ItemCard\r\n                          item={item}\r\n                          lists={lists}\r\n                          setLists={setLists}\r\n                          index={0}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    {!showSeparator && (\r\n                      <ItemCard\r\n                        item={item}\r\n                        lists={lists}\r\n                        setLists={setLists}\r\n                        index={0}\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </ReactSortable>\r\n          </Card>\r\n        )}\r\n      </div>\r\n      <div\r\n        style={{\r\n          flex: \"auto\",\r\n          padding: \"0 10px\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <Flex\r\n          gap={20}\r\n          wrap\r\n          vertical\r\n          style={{ maxHeight: \"95vh\" }}\r\n          justify=\"center\"\r\n        >\r\n          {remainingLists.map((list, index) => (\r\n            <Card\r\n              title={`层级:${index + 1}`}\r\n              bordered={false}\r\n              style={{\r\n                minHeight: \"10vh\",\r\n                minWidth: \"10vw\",\r\n                maxWidth: \"15vw\",\r\n                height: \"auto\",\r\n                overflowY: \"auto\",\r\n              }}\r\n            >\r\n              <ReactSortable\r\n                list={list.items}\r\n                setList={(newList) => handleListChange(newList, index + 1)}\r\n                onEnd={handleDrop}\r\n                group={{\r\n                  name: \"shared\",\r\n                  put: [\"shared\"],\r\n                }}\r\n                // clone={(item) => handleClone(item, index)}\r\n                className={`list${list.id}`}\r\n                style={{ height: \"100%\" }}\r\n              >\r\n                {list.items.map((item) => (\r\n                  <ItemCard\r\n                    key={item.id}\r\n                    item={item}\r\n                    lists={lists}\r\n                    setLists={setLists}\r\n                    index={index + 1}\r\n                  />\r\n                ))}\r\n              </ReactSortable>\r\n            </Card>\r\n          ))}\r\n        </Flex>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicDragList;\r\n","import Project from \"./project/project\";\r\nimport \"./workbench.css\";\r\nimport { useState } from \"react\";\r\n\r\nimport DynamicDragList from \"./workSpace/index\";\r\nconst Workbench = () => {\r\n  const [flash, setFlash] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  const [missionId, setMissionId] = useState(null);\r\n  //存储每个项目的层级数据便于直接渲染展示\r\n  const [MissionListData, setMissionListData] = useState([]);\r\n  return (\r\n    <div className=\"workbench\">\r\n      {/* 左边项目模块 */}\r\n      <div className=\"work_project\">\r\n        <Project\r\n          flash={flash}\r\n          missionId={missionId}\r\n          setMissionId={setMissionId}\r\n          items={items}\r\n          setItems={setItems}\r\n          setMissionListData={setMissionListData}\r\n        />\r\n      </div>\r\n      {/* 中间选择组件模块 */}\r\n      {/* <div className=\"work_model\">\r\n        <Workmodel></Workmodel>\r\n      </div> */}\r\n      {/* 右边工作台 */}\r\n      {/* <div className=\"work_bench\">\r\n\r\n            </div> */}\r\n      <DynamicDragList\r\n        setFlash={setFlash}\r\n        flash={flash}\r\n        MissionListData={MissionListData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Workbench;\r\n"],"names":["error","response","status","_message","concat","request","message","service","axios","create","baseURL","process","timeout","headers","responseType","interceptors","use","config","token","localStorage","getItem","Promise","reject","data","handleErrors","sendVerificationCode","email","url","method","accountController","password","verificationCode","accountLogin","getModelsApi","fetchRankApi","fetchAllApplicationApi","userId","params","fetchRecentTaskApi","modelAllModelsApi","page","arguments","length","undefined","name","accounthomePageInfo","fetchMyMessage","fetchMyModel","fetchMyApply","accountpersonalCenterInfo","agreeApply","applicationId","disagreeApply","applyModel","modelId","fetchTaskHistory","postNewTaskApi","_ref","missionId","items","open","setOpen","useState","_jsxs","_Fragment","children","_jsx","_Button","type","onClick","showDrawer","_Drawer","title","onClose","size","renderContent","content","image","src","style","width","height","answer","match","alt","flash","setMissionId","setItems","setMissionListData","confirmLoading","setConfirmLoading","inputValue","setInputValue","newitems","setNewItems","selectedCardIndex","setSelectedCardIndex","useEffect","async","console","fetchTaskHistoryAPI","map","_ref2","index","missionName","className","display","gap","icon","PlusOutlined","flexGrow","showModal","_Modal","onOk","handleOk","setTimeout","onCancel","handleCancel","okText","cancelText","_Input","placeholder","value","onChange","e","target","GetResult","_ref3","_Card","marginTop","backgroundColor","border","handleClick","key","cursor","id","class","viewBox","cx","cy","r","dataresult","setFlash","rawList","fileList","setFileList","form","_Form","useForm","showLoading","setShowLoading","ServerChoose","setServerChoose","resetFields","Loading","bodyStyle","paddingBottom","extra","_Space","submit","_Radio","marginBottom","layout","hideRequiredMark","onFinish","description","values","warning","formData","FormData","forEach","file","append","originFileObj","post","Authorization","modelList","errorText","cup_use1","cup_use2","urlServer","get","JSON","stringify","formattedModelList","success","Item","label","rules","required","_Row","gutter","_Col","span","TextArea","rows","initialValue","hidden","valuePropName","getValueFromEvent","Array","isArray","_Upload","listType","beforeUpload","_newFileList$","newFileList","startsWith","maxCount","accept","background","DeleteOutlined","handleRemove","marginLeft","Name","setLists","weight","lists","question","oldweight","setOldweight","oldquestion","setOldquestion","updateWeightByModelId","list","newWeight","newQuestion","item","maxWidth","overflow","textOverflow","whiteSpace","updatedList","i","log","prefix","PieChartOutlined","event","isNumber","isNaN","indexOf","lastIndexOf","split","pattern","BulbOutlined","ItemCard","hoverable","Setweight","modelName","_firstList$items","MissionListData","modalList","setModalList","ModalList","updatedModalListResponse","isAPI","fetchModalListResponse","LList","parse","prevLists","handleDrop","setModelList","newModelList","filter","_","layer","parallel","models","modelUrl","firstList","remainingLists","sort","a","b","firstIsAPI1Index","findIndex","handleListChange","newList","updatedLists","flex","padding","minWidth","position","ReactSortable","setList","group","pull","put","top","right","zIndex","fontSize","bordered","overflowY","addNewList","some","newId","marginRight","UploadMessage","onEnd","clone","Date","getTime","showSeparator","React","_Flex","wrap","vertical","maxHeight","justify","minHeight","Workbench","Project","DynamicDragList"],"sourceRoot":""}